package com.inetpsa.eds.dao.model;

// Generated 10 juil. 2012 14:11:20 by Hibernate Tools 3.2.1.GA

import com.inetpsa.eds.dao.I_FormData;
import com.inetpsa.eds.dao.I_ReconsultableFormData;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * EdsMissionProfilFormData generated by hbm2java
 */
@XmlRootElement(name = "mission-profile-form")
public class EdsMissionProfilFormData implements java.io.Serializable, I_FormData, I_ReconsultableFormData {
    /**
     * String Variable to hold the value for Column MPFD_ID of Table OPLQTMPD
     */
    private String mpfdId;
    /**
     * Variable to hold the value for Column MPFD_EDS_ID of Table OPLQTMPD
     */
    private EdsEds edsEds;
    /**
     * Set Collection to hold the values for Table OPLQTMIP
     */
    private Set<EdsMissionProfil> edsMissionProfils = new HashSet<EdsMissionProfil>(0);

    // private List<EdsMissionProfil> profil;

    /**
     * Default Constructor
     */
    public EdsMissionProfilFormData() {
    }

    /**
     * Parameterized Constructor
     * 
     * @param mpfdId Id
     * @param edsEds Eds details
     */
    public EdsMissionProfilFormData(String mpfdId, EdsEds edsEds) {
        this.mpfdId = mpfdId;
        this.edsEds = edsEds;
    }

    /**
     * Parameterized Constructor
     * 
     * @param mpfdId ID
     * @param edsEds Eds Details
     * @param edsProjects set of EdsProject
     * @param edsMissionProfils Set of EdsMissionProfil
     */
    public EdsMissionProfilFormData(String mpfdId, EdsEds edsEds, Set edsProjects, Set edsMissionProfils) {
        this.mpfdId = mpfdId;
        this.edsEds = edsEds;
        this.edsMissionProfils = edsMissionProfils;
    }

    /**
     * Function to get mpfdId
     * 
     * @return the Value of mpfdId
     */
    @XmlTransient
    public String getMpfdId() {
        return this.mpfdId;
    }

    /**
     * Function to set mpfdId
     * 
     * @param mpfdId Id
     */
    public void setMpfdId(String mpfdId) {
        this.mpfdId = mpfdId;
    }

    /**
     * Function to get edsEds
     * 
     * @return the Value of edsEds
     */
    @XmlTransient
    public EdsEds getEdsEds() {
        return this.edsEds;
    }

    /**
     * Function to set edsEds
     * 
     * @param edsEds Eds details
     */
    public void setEdsEds(EdsEds edsEds) {
        this.edsEds = edsEds;
    }

    /**
     * Function to get edsMissionProfils
     * 
     * @return the Value of edsMissionProfils
     */
    @XmlElementWrapper(name = "mission-profiles")
    @XmlElement(name = "mission-profil")
    public Set<EdsMissionProfil> getEdsMissionProfils() {
        return this.edsMissionProfils;
    }

    /**
     * Function to set edsMissionProfils
     * 
     * @param edsMissionProfils Set of EdsMissionProfile
     */
    public void setEdsMissionProfils(Set edsMissionProfils) {
        this.edsMissionProfils = edsMissionProfils;
    }

    /**
     * Function to get EdsMissionProfilFormData
     * 
     * @param eds Eds details
     * @param copiesMap Map of Id and EdsMissionProfile object
     * @return the Value of EdsMissionProfilFormData
     */
    public I_FormData getCopy(EdsEds eds, HashMap<String, Object> copiesMap) {
        EdsMissionProfilFormData copy = new EdsMissionProfilFormData(UUID.randomUUID().toString(), eds);
        copy.edsMissionProfils = new HashSet();
        for (EdsMissionProfil prof : edsMissionProfils) {
            EdsMissionProfil profilCopy = new EdsMissionProfil(prof);
            copy.edsMissionProfils.add(profilCopy);
        }
        return copy;
    }

    /**
     * Function to get all saved data
     * 
     * @return all saved data
     */
    public List<Object> getAllItemsToSave() {
        return Collections.singletonList((Object) this);
    }

    /**
     * Function returns Reconsultable copy
     * 
     * @param eds Eds details
     * @param copiesMap Map of Id and EdsMissionProfile object
     * @return Eds Mission Profil Form data
     */
    public I_FormData getReconsultableCopy(EdsEds eds, HashMap<String, Object> copiesMap) {
        EdsMissionProfilFormData copy = new EdsMissionProfilFormData(UUID.randomUUID().toString(), eds);
        copy.edsMissionProfils = new HashSet();
        for (EdsMissionProfil prof : edsMissionProfils) {
            EdsMissionProfil profilCopy = new EdsMissionProfil(prof);
            copy.edsMissionProfils.add(profilCopy);
        }
        return copy;
    }
}
