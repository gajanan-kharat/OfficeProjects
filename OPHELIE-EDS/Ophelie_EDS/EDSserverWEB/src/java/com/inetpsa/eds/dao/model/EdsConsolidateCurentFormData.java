package com.inetpsa.eds.dao.model;

// Generated 19 sept. 2012 16:03:02 by Hibernate Tools 3.2.1.GA

import java.io.Serializable;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;

import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

import com.inetpsa.eds.dao.I_FormData;

/**
 * EdsConsolidateCurentFormData generated by hbm2java
 */
@XmlRootElement(name = "consolidated-current-consumption-form")
public class EdsConsolidateCurentFormData implements Serializable, I_FormData {
    /**
     * String Variable to hold the value for Column CCEDS_ID of Table EDS_CONSOLIDATE_CURENT_FORM_DATA
     */
    private String ccedsId;
    /**
     * Variable to hold the value for Column CCEDS_EDS_ID of Table EDS_CONSOLIDATE_CURENT_FORM_DATA
     */
    private EdsEds edsEds;
    /**
     * String Variable to hold the value for Column CC_COMMENT of Table EDS_CONSOLIDATE_CURENT_FORM_DATA
     */
    private String ccComment;
    /**
     * Set Collection to hold the values for Table OPLQTSUY
     */
    private Set<EdsSupply> edsSupplies = new HashSet<EdsSupply>(0);
    /**
     * Variable to hold the value for Column PCC_CCM_ID of Table EDS_CONSOLIDATE_CURENT_FORM_DATA
     */
    private EdsGroundConsolidateCurent edsGroundConsolidateCurent;

    /**
     * Default Constructor
     */
    public EdsConsolidateCurentFormData() {
    }

    /**
     * Parameterized Constructor
     * 
     * @param ccedsId Id
     * @param edsEds EdsEds
     */
    public EdsConsolidateCurentFormData(String ccedsId, EdsEds edsEds) {
        this.ccedsId = ccedsId;
        this.edsEds = edsEds;
    }

    /**
     * Parameterized Constructor
     * 
     * @param ccedsId Id
     * @param edsEds EdsEds
     * @param ccComment comment
     * @param edsSupplies set of EdsSupply
     */
    public EdsConsolidateCurentFormData(String ccedsId, EdsEds edsEds, String ccComment, Set<EdsSupply> edsSupplies) {
        this.ccedsId = ccedsId;
        this.edsEds = edsEds;
        this.ccComment = ccComment;
        this.edsSupplies = edsSupplies;
    }

    /**
     * Function to get ccedsId
     * 
     * @return Id
     */
    @XmlAttribute(name = "id")
    public String getCcedsId() {
        return this.ccedsId;
    }

    /**
     * Function to set ccedsId
     * 
     * @param ccedsId ID
     */
    public void setCcedsId(String ccedsId) {
        this.ccedsId = ccedsId;
    }

    /**
     * Function to get edsEds
     * 
     * @return EdsEds
     */
    @XmlTransient
    public EdsEds getEdsEds() {
        return this.edsEds;
    }

    /**
     * Function to set edsEds
     * 
     * @param edsEds EdsEds
     */
    public void setEdsEds(EdsEds edsEds) {
        this.edsEds = edsEds;
    }

    /**
     * Function to get ccComment
     * 
     * @return Comment
     */
    @XmlTransient
    public String getCcComment() {
        return this.ccComment;
    }

    /**
     * Function to set ccComment
     * 
     * @param ccComment comment
     */
    public void setCcComment(String ccComment) {
        this.ccComment = ccComment;
    }

    /**
     * Function to get edsSupplies
     * 
     * @return Set of EdsSupply
     */
    @XmlTransient
    public Set<EdsSupply> getEdsSupplies() {
        return this.edsSupplies;
    }

    /**
     * Function to set edsSupplies
     * 
     * @param edsSupplies Set of EdsSupply
     */
    public void setEdsSupplies(Set<EdsSupply> edsSupplies) {
        this.edsSupplies = edsSupplies;
    }

    // TODO : Getters and setters for consolidated power and PSA measurement
    /**
     * Function returns EdsConsolidateSupplies
     * 
     * @return Set of EdsConsolidateSupply
     */
    @XmlElementWrapper(name = "consolidate-supplies")
    @XmlElement(name = "supply")
    // FOR XML EXPORT PURPOSE
    public Set<EdsConsolidateSupply> getEdsConsolidateSupplies() {
        Set<EdsConsolidateSupply> consolidateSupplys = new HashSet<EdsConsolidateSupply>();
        for (EdsSupply supply : edsSupplies) {
            if (supply.getEdsConsolidateSupply() != null) {
                consolidateSupplys.add(supply.getEdsConsolidateSupply());
            }
        }
        return consolidateSupplys;
    }

    /**
     * Function to define set of EdsConsolidateSupply
     * 
     * @param edsSupplies set of EdsConsolidateSupply
     */
    public void setEdsConsolidateSupplies(Set edsSupplies) {
        // DO NOTHING, FOR XML EXPORT PURPOSE
    }

    /**
     * Function returns EdsPsaMeasureSupplies
     * 
     * @return Set of EdsPsaMeasureSupply
     */
    @XmlElementWrapper(name = "psa-mesure-supplies")
    @XmlElement(name = "supply")
    // FOR XML EXPORT PURPOSE
    public Set<EdsPsaMesureSupply> getEdsPsaMesureSupplies() {
        Set<EdsPsaMesureSupply> edsPsaMesureSupplys = new HashSet<EdsPsaMesureSupply>();
        for (EdsSupply supply : edsSupplies) {
            if (supply.getEdsPsaMesureSupply() != null) {
                edsPsaMesureSupplys.add(supply.getEdsPsaMesureSupply());
            }
        }
        return edsPsaMesureSupplys;
    }

    /**
     * Function to define set of EdsSupply
     * 
     * @param edsSupplies set of EdsSupply
     */
    public void setEdsPsaMesureSupplies(Set edsSupplies) {
        // DO NOTHING, FOR XML EXPORT PURPOSE
    }

    /**
     * Function to get edsGroundConsolidateCurent
     * 
     * @return EdsGroundConsolidateCurent
     */
    public EdsGroundConsolidateCurent getEdsGroundConsolidateCurent() {
        if (this.edsGroundConsolidateCurent == null) {
            this.edsGroundConsolidateCurent = new EdsGroundConsolidateCurent(UUID.randomUUID().toString());
        }
        return this.edsGroundConsolidateCurent;
    }

    /**
     * Function to set edsGroundConsolidateCurent
     * 
     * @param edsGroundConsolidateCurent Eds Ground Consolidate current
     */
    public void setEdsGroundConsolidateCurent(EdsGroundConsolidateCurent edsGroundConsolidateCurent) {
        this.edsGroundConsolidateCurent = edsGroundConsolidateCurent;
    }

    /**
     * Function to get copy of EdsConsolidateCurrentFormData
     * 
     * @param eds Eds details
     * @param copiesMap Map of ID and EdsSupply objects
     * @return Form data
     */
    public I_FormData getCopy(EdsEds eds, HashMap<String, Object> copiesMap) {
        EdsConsolidateCurentFormData copy = new EdsConsolidateCurentFormData(UUID.randomUUID().toString(), eds);
        copy.ccComment = ccComment;
        EdsGroundConsolidateCurent curent = new EdsGroundConsolidateCurent(edsGroundConsolidateCurent);
        copy.setEdsGroundConsolidateCurent(curent);
        for (EdsSupply source : edsSupplies) {
            if (!copiesMap.containsKey(source.getSedsId())) {
                copiesMap.put(source.getSedsId(), source.getCopy(eds, copiesMap));

            }
            EdsSupply supplyCopy = (EdsSupply) copiesMap.get(source.getSedsId());

            copy.edsSupplies.add(supplyCopy);
        }

        return copy;
    }

    public EdsConsolidateSupply getEdsConsolidatedSupplyBySupplyName(String supplyName) {
        for (EdsSupply supply : edsSupplies) {
            if (supply.getEdsConsolidateSupply() != null && supply.getSedsSupplyName().equals(supplyName)) {
                return supply.getEdsConsolidateSupply();
            }
        }

        return null;
    }

    /**
     * Function get all saved items
     * 
     * @return All saved items
     */
    public List getAllItemsToSave() {
        return Collections.singletonList((Object) this); // TODO: Mettre la liste de supply en cascade all delete orphan si ce n'est pas déjà fait
    }
}
