<?xml version="1.0" encoding="UTF-8"?>
<!-- Toolboxxml V3 generated file -->
<beans xmlns="http://www.springframework.org/schema/beans"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xmlns:aop="http://www.springframework.org/schema/aop"
	     xmlns:tx="http://www.springframework.org/schema/tx"
	     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


	<bean id="InterfaceOasisPropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:toolboxxml-InterfaceOasis.properties</value>
			</list>
		</property>
	</bean>

	<bean id="InterfaceOasisJaxbServiceFactory" class="com.inetpsa.cxl.core.xfire.service.binding.jaxb.JaxbServiceFactory">
	    <constructor-arg index="0" ref="xfire.transportManager" />
	    <property name="wsdlBuilderFactory" ref="InterfaceOasisJaxbWSDLBuilderFactory"/>
	</bean>

	<bean id="InterfaceOasisJaxbBindingProvider" class="org.codehaus.xfire.aegis.AegisBindingProvider">
    	<constructor-arg index="0" ref="InterfaceOasisJaxbTypeRegistry" />
	</bean>

	<bean id="InterfaceOasisJaxbTypeRegistry" class="com.inetpsa.cxl.core.xfire.service.binding.jaxb.JaxbTypeRegistry"/>

	<bean id="InterfaceOasisJaxbWSDLBuilderFactory" class="com.inetpsa.cxl.core.xfire.service.binding.jaxb.JaxbWSDLBuilderFactory"/>

	<!--
		Invoker du service permettant de gerer l'appel
	-->
	<bean id="InterfaceOasisInvoker" class="com.inetpsa.oaz00.ws.server.invoker.InterfaceOasisInvoker">
		<property name="service" ref="InterfaceOasisImpl"/>
	</bean>

	<!--
		Implementation du service
	-->
	<bean id="InterfaceOasisImpl" class="com.inetpsa.oaz00.ws.server.services.InterfaceOasisImpl">
	</bean>

		<bean id="InterfaceOasisValidationInHandler" class="com.inetpsa.cxl.core.xfire.handler.in.JaxbValidationInHandler">
		<property name="validationEnabled" value="${InterfaceOasis.xml_binding.jaxb.validation_enabled}"/>
	</bean>
	
	<bean id="InterfaceOasisMonitorInHandler" class="com.inetpsa.cxl.core.xfire.handler.in.MonitorInHandler">
		<property name="enabled" value="${InterfaceOasis.monitoring.handler.is_enabled}"/>
	</bean>

	<bean id="InterfaceOasisMonitorOutHandler" class="com.inetpsa.cxl.core.xfire.handler.out.MonitorOutHandler">
		<property name="enabled" value="${InterfaceOasis.monitoring.handler.is_enabled}"/>
		<property name="activityRecorder" ref="ActivityRecorder"/>
	</bean>

	<!--
		La declaration du service avec les proprietes possibles :
			- serviceInterface 		: service interface
			- serviceBean 			: service implementation
			- namespace				: service namespace
			- invoker				: invoker service
			- style					: document or wrapped
			- binding framework		: castor, xmlbeans
			- wsdl url				: wsdl gived for the service
			- in handler			: inpipe handler list for this service
			- out handler			: outpipe handler list for this service
			- properties			: mtom for example
	-->
	<bean name="/InterfaceOasis" class="org.codehaus.xfire.spring.remoting.XFireExporter">
	    <property name="serviceInterface" value="com.inetpsa.xml.services.oasisplm.interfaceoasis.InterfaceOasisPortType" />
		<property name="serviceBean" ref="InterfaceOasisImpl" />
		<property name="invoker" ref="InterfaceOasisInvoker" />
		<property name="xfire" ref="xfire" />
		<property name="wsdlURL" value="../wsdl/InterfaceOasis.wsdl"/>
		<property name="namespace" value="${InterfaceOasis.namespace}"/>
		<property name="style" value="wrapped"/>
		<property name="serviceFactory" ref="InterfaceOasisJaxbServiceFactory" />
		<property name="inHandlers">
			<list>
				<ref bean="InterfaceOasisMonitorInHandler" />
				<ref bean="dispatcherInHandler" />
					<ref bean="InterfaceOasisValidationInHandler" />
				</list>
		</property>
		<property name="outHandlers">
			<list>
				<ref bean="InterfaceOasisMonitorOutHandler"/>
			</list>
		</property>
	</bean>

	<!--
		The service model
		Suffix the bean id with the service name in case more than one file of this case is generated.
	-->
	<bean id="InterfaceOasisServiceModel" class="org.codehaus.xfire.service.Service" factory-bean="/InterfaceOasis" factory-method="getXFireService"/>

	<!--
		The service information object
	-->
	<bean id="InterfaceOasisServiceInfo" class="org.codehaus.xfire.service.ServiceInfo" factory-bean="InterfaceOasisServiceModel" factory-method="getServiceInfo"/>

	<!--
		The operation object
		Suffix the bean id with the service name in case more than one file of this case is generated.
	-->
	<bean id="InterfaceOasisCalculation" class="org.codehaus.xfire.service.OperationInfo" factory-bean="InterfaceOasisServiceInfo" factory-method="getOperation">
		<constructor-arg value="Calculation"/>
	</bean>

	<!--
		The ws-addressing information object that permit to add soap ws-addressing header
	-->
	<!-- <bean id="InterfaceOasisCalculationAoi" class="org.codehaus.xfire.addressing.AddressingOperationInfo" >
		<constructor-arg ref="InterfaceOasisCalculation"/>
	</bean> -->

	<!--
		The operation object
		Suffix the bean id with the service name in case more than one file of this case is generated.
	-->
	<bean id="InterfaceOasisCheckFormula" class="org.codehaus.xfire.service.OperationInfo" factory-bean="InterfaceOasisServiceInfo" factory-method="getOperation">
		<constructor-arg value="CheckFormula"/>
	</bean>

	<!--
		The ws-addressing information object that permit to add soap ws-addressing header
	-->
	<!-- <bean id="InterfaceOasisCheckFormulaAoi" class="org.codehaus.xfire.addressing.AddressingOperationInfo" >
		<constructor-arg ref="InterfaceOasisCheckFormula"/>
	</bean> -->


</beans>


